// <auto-generated />
using System;
using Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace SmartDeliveryService.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250327104301_ModelV2")]
    partial class ModelV2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Models.Artikal", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<Guid?>("Paketid")
                        .HasColumnType("char(36)");

                    b.Property<int>("cena")
                        .HasColumnType("int");

                    b.Property<string>("naziv")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("opis")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("slika")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.HasIndex("Paketid");

                    b.ToTable("artikli");
                });

            modelBuilder.Entity("Models.Dostava", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PNGPotpisa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("dostavljacid")
                        .HasColumnType("char(36)");

                    b.Property<Guid>("paketid")
                        .HasColumnType("char(36)");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.Property<TimeOnly>("vremeDostave")
                        .HasColumnType("time(6)");

                    b.HasKey("id");

                    b.HasIndex("dostavljacid");

                    b.HasIndex("paketid");

                    b.ToTable("dostave");
                });

            modelBuilder.Entity("Models.Dostavljac", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("brojTelefona")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("dostavljaci");
                });

            modelBuilder.Entity("Models.Korisnik", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("adresaZaDostavu")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("brojTelefona")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("ime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("prezime")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("korisnici");
                });

            modelBuilder.Entity("Models.Paket", b =>
                {
                    b.Property<Guid>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("PDFfaktura")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cena")
                        .HasColumnType("int");

                    b.Property<Guid>("korisnikid")
                        .HasColumnType("char(36)");

                    b.HasKey("id");

                    b.HasIndex("korisnikid");

                    b.ToTable("paketi");
                });

            modelBuilder.Entity("Models.Artikal", b =>
                {
                    b.HasOne("Models.Paket", null)
                        .WithMany("listaArtikala")
                        .HasForeignKey("Paketid");
                });

            modelBuilder.Entity("Models.Dostava", b =>
                {
                    b.HasOne("Models.Dostavljac", "dostavljac")
                        .WithMany()
                        .HasForeignKey("dostavljacid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Models.Paket", "paket")
                        .WithMany()
                        .HasForeignKey("paketid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("dostavljac");

                    b.Navigation("paket");
                });

            modelBuilder.Entity("Models.Paket", b =>
                {
                    b.HasOne("Models.Korisnik", "korisnik")
                        .WithMany()
                        .HasForeignKey("korisnikid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("korisnik");
                });

            modelBuilder.Entity("Models.Paket", b =>
                {
                    b.Navigation("listaArtikala");
                });
#pragma warning restore 612, 618
        }
    }
}
